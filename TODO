TODO alpha
	[X] Move all of the socket repl stuff to a plugin project
	[X] Make buffer-get-text-async work, just test it at the repl
	[X] Get "eval-code" working
	[X] Figure out how to accumulate / display results in vim
		[X] append it all to a file
		[X] preferably a temp file (could be a lot of data)
		[X] `:ShowRepl`
			no vimscript, invoke a plugin function
			show the contents of the temp file in the current buffer
			make it autoread
	[X] Name vim functions correctly
	[X] create prod & debug plugin.vim
	[X] add debug switch (var) to socket-repl-plugin.clj
    [X] errors in the middle of a buffer
    can be lost - wrap in eval?
	[X] implement doc (word under cursor)
	Results buffer
		A single buffer, like NerdTree, but on far right
			`show-log`
				[X] Only display if not already visible
				use `buffer-visible?-async`
				[X] not working, might need buffer property
					buffer created by terminal has name we can't control
					we could read it back in and store it
				if not, :botright vnew, existing command
		[X] After showing the log, return cursor to original buffer
		[X] Dismiss log w/ `q` from log buffer
		[X] Dismiss log w/ `,drlog` from anywhere
		[X] Auto-show any time an eval, doc, happens
		[X] Add docs for this & customization story
	[X] Pass host, port in connect
		[X] Make sure :Connect works with no args, or host:port arg
		[X] Update debug vimscript
	[_] Update README
		[X] Move NVIM_LISTEN... stuff to a debug section
		[_] demo video
		[X] architecture diagram
			nvim<--msgpack/stdio-->plugin(jar)<--localhost:5555-->socketrepl
	[X] Error handle repl server not running
		Connection localhost:3333
		Then trying an ,eb doesn't fail gracefully
		->Exception in logs, current-connection still nil?
	[X] Script debugging
		[X] nvim listening to socket, sourced debug script
		[X] plugin process running a repl
			[X] automatically connect to nvim, with socketrepl main
		[X] another clojure process w/ socket repl on 5555
		[X] docs
			You still have to :Connect from nvim
	[X] Fix `go` usage, no i/o
	[X] Global state
		[X] `user` should also have a `reset` to stop -> start
		Working towards getting rid of `current-connection`
			[X] Make a repl log component
			[X] Refactor names of things in the `socket-repl-cnn` atom
	[_] Can we use a multimethod rather than register-method?
		possibly wrap w/ async/thread

	[_] Enhance debugging
		[X] Comment new debug script function
		[_] [NEXT] Document / video process for debugging, including refresh, restart
			and reconnect
		[X] debug restart function should close repl log
